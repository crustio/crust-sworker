#!/bin/bash
function _store_meta()
{
    validate_file
    store_metadata
}

function seal_exit()
{
    rm -rf $tmpdir
}

########## MAIN BODY ##########
# basic variable
basedir=$(cd `dirname $0`;pwd)
instdir=$(cd $basedir/..;pwd)
scriptdir=$instdir/scripts
datadir=$instdir/data
testdir=$instdir/test_app
testfiledir=$testdir/files
tmpdir=$basedir/tmp
TMPFILE=$tmpdir/TMPFILE.$(date +%N)${RANDOM}

mkdir -p $tmpdir

trap 'seal_exit' EXIT

. $scriptdir/utils.sh


declare -A cid_2_use_m
data_arry=($(ls $datadir))
data_size=${#data_arry[@]}
acc=6

# Seal some file
while [ $acc -gt 0 ]; do
    # Randomly seal file
    index=$(($RANDOM % $data_size))
    seal $datadir/${data_arry[$index]} &>$TMPFILE
    if [ $? -ne 0 ]; then
        verbose ERROR "Seal file failed!" n
        exit 1
    fi
    cid=$(cat $TMPFILE 2>/dev/null)
    if [ x"$cid" != x"" ] && [ ${#cid} -ge 46 ]; then
        cid=${cid:0:46}
        cid_2_use_m[$cid]=0
    else
        verbose ERROR "Cannot get wrong sealed cid($cid)!" n
        exit 1
    fi
    ((acc--))
done

# Delete valid file sequently
acc=0
valid_arry=()
for cid in ${!cid_2_use_m[@]}; do
    if [ ${cid_2_use_m[$cid]} -eq 0 ]; then
        valid_arry[$acc]=$cid
        confirm $cid &>$TMPFILE &
        ((acc++))
    fi
done
sleep 3
acc=2
for cid in ${valid_arry[@]}; do
    delete_file $cid &>/dev/null
    if [ $? -ne 0 ]; then
        verbose ERROR "delete file sequently failed!" n
        exit 1
    fi
    cid_2_use_m[$cid]=1
    _store_meta &>/dev/null
    if ! check_hash "$cid" "deleted"; then
        verbose ERROR "delete file:$cid failed!Find cid in workload" n
        exit 1
    fi
    ((acc--))
    if [ $acc -le 0 ]; then
        break
    fi
done

# Delete confirmed file concurrently
delete_arry=()
acc=0
for cid in ${valid_arry[@]}; do
    if [ ${cid_2_use_m[$cid]} -eq 0 ]; then
        delete_file $cid &>/dev/null &
        delete_arry[$acc]=$cid
        ((acc++))
    fi
done
_store_meta &>/dev/null
for cid in ${delete_arry[@]}; do
    if ! check_hash "$cid" "deleted"; then
        verbose ERROR "delete file concurrently failed!" n
        exit 1
    fi
done
